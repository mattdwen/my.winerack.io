@model winerack.Models.OpeningViewModels.Create

@{
    ViewBag.Title = "Open a Bottle";
}

@Html.Partial("Wines/_Header", Model.StoredBottle.Purchase.Bottle.Wine)

<h2>Open a bottle</h2>

<div class="widget">
    @using (Html.BeginForm("Create", "Openings", FormMethod.Post, new { enctype = "multipart/form-data" })) {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(m => m.StoredBottleID)

            @if (!string.IsNullOrWhiteSpace(Model.StoredBottle.Location)) {
                <div class="form-group">
                    <label class="control-label col-md-2" for="@Html.IdFor(m => m.StoredBottle.Location)">Stored</label>
                    <div class="col-md-10">
                        <span class="form-control">@Html.DisplayFor(m => m.StoredBottle.Location)</span>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(m => m.OpenedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.OpenedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.OpenedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.Notes, new { htmlAttributes = new { @class = "form-control" }})
                    @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => m.Rating, new { htmlAttributes = new { @class = "rating", data_min = 1, data_max = 5, data_icon_lib = "fa", data_active_icon = "fa-star", data_inactive_icon = "fa-star-o", data_clearable = "remove", data_clearable_icon="fa-times" } })
                    @Html.ValidationMessageFor(m => m.Rating, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Photo</label>
                <div class="col-md-10">
                    <a id="photoSelect" href="#">
                        <img id="photoPreview" src="//placehold.it/300x200&text=Photo" width="300" />
                    </a>
                    <input class="hidden" id="Photo" name="Photo" type="file" accept="image/*" />
                </div>
            </div>

            @if (Model.HasFacebook || Model.HasTumblr || Model.HasTwitter) {
                <div class="form-group">
                    <label class="control-label col-md-2">Share</label>
                    <div class="col-md-10">
                        @if (Model.HasFacebook) {
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(m => m.PostFacebook)
                                    Facebook
                                </label>
                            </div>
                        }

                        @if (Model.HasTumblr) {
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(m => m.PostTumblr)
                                    Tumblr
                                </label>
                            </div>
                        }

                        @if (Model.HasTwitter) {
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(m => m.PostTwitter)
                                    Twitter
                                </label>
                            </div>
                        }
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-success">Open bottle</button>
                    @Html.ActionLink("Back to bottle", "Details", new { controller = "Bottles", id = @Model.StoredBottle.Purchase.BottleID }, new { @class = "btn btn-linked" })
                </div>
            </div>
        </div>
    }
</div>

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/openings/create.js")
}